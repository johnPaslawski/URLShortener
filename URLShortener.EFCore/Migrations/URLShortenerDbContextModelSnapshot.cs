// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using URLShortener.EFCore.EFData;

namespace URLShortener.EFCore.Migrations
{
    [DbContext(typeof(URLShortenerDbContext))]
    partial class URLShortenerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("URLShortener.Domain.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenuineURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortenedURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenuineURL = "https://www.youtube.com/watch?v=3QbaTfN0-8s",
                            ShortenedURL = "short/url/1"
                        },
                        new
                        {
                            Id = 2,
                            GenuineURL = "https://www.youtube.com/watch?v=bHwl8TdEI6k",
                            ShortenedURL = "short/url/2"
                        },
                        new
                        {
                            Id = 3,
                            GenuineURL = "https://www.youtube.com/watch?v=_2By2ane2I4&t=867s",
                            ShortenedURL = "short/url/3"
                        });
                });

            modelBuilder.Entity("URLShortener.Domain.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Test Mike",
                            Content = "This is test content for an important inner report on topic A. There is a place for report details and content.",
                            CreationTime = new DateTime(2021, 10, 1, 1, 41, 50, 329, DateTimeKind.Local).AddTicks(7450),
                            Description = "Important inner report on topic A"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Trial John",
                            Content = "This is test content for an important inner report on topic B. There is a place for report details and content.",
                            CreationTime = new DateTime(2021, 10, 1, 1, 41, 50, 336, DateTimeKind.Local).AddTicks(4198),
                            Description = "Important inner report on topic B"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Excercise Bob",
                            Content = "This is test content for an important inner report on topic C. There is a place for report details and content.",
                            CreationTime = new DateTime(2021, 10, 1, 1, 41, 50, 336, DateTimeKind.Local).AddTicks(4265),
                            Description = "Important inner report on topic C"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
